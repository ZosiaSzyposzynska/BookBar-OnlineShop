// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ProductImage {
  id        String  @id @default(uuid())
  image     String
  product      Product    @relation(fields: [productId], references: [id])
  productId    String
}


model Product {
  id     String @id @default(uuid())
  title  String @unique
  author String
  rating Float
  price  Int
  description String   @db.VarChar(5000)
  image  String
  gallery ProductImage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  CartProduct CartProduct[]
  

 
}




model Password {
  id             String @id @default(uuid())
  hashedPassword String
  user           User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String @unique
}

model Order {
  id             String   @id @unique @default(uuid())
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  dateOfCreation DateTime @default(now())

  name          String
  email         String
  address       String
  paymentMethod String

  totalPrice Int

  cartProducts CartProduct[]
}

model CartProduct {
  id        String  @id @default(uuid())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  count     Int
  price     Int
  comment   String?
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
}

enum Role {
  USER
  ADMIN
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  role     Role      @default(USER)
  password Password?

  orders Order[]
}
